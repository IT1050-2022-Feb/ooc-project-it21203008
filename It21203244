Staff.h 
 
#include "Vehicle.h" #define SIZE 5 class Staff { private: 
 	int staffID;  	
char staffName[20];  	
char staffEmail[20];  	char staffNumber[10];  	char staffUsername[20];  	char staffPassword[20]; 
 
 	Vehicle* vhcl[SIZE]; 
 public: 
 	Staff(); 
 	Staff(int pstaffID, const char pstaffName[], 
const char pstaffEmail[], const char pstaffNumber[], 
const char pstaffUsername[], const char pstaffPassword[]); 
 	void login(const char stfUsername, const char stfPsword );  	void manage( Vehicle* papt); 
 	~Staff(); 
 
}; 



Staff.cpp 
 
#include "Vehicle.h" 
#include "Staff.h" 
#include<cstring> 
 
Staff::Staff() 
{ 
 	staffID = 0;  	strcpy(staffName, "");  	strcpy(staffEmail, "");  	strcpy(staffNumber, "0000000000");  	strcpy(staffUsername, "");  	strcpy(staffPassword, ""); 
} 
 
Staff::Staff(int pstaffID, const char pstaffName[], const char pstaffEmail[], const char pstaffNumber[], const char pstaffUsername[], const char pstaffPassword[]) 
{ 
 	staffID = pstaffID;  	strcpy(staffName, pstaffName);  	strcpy(staffEmail, pstaffEmail);  	strcpy(staffNumber, pstaffNumber);  	strcpy(staffUsername, pstaffUsername);  	strcpy(staffPassword, pstaffPassword); 
} 
 
void Staff::login(const char stfUsername, const char stfPsword) 
{ 
} 
 
void Staff::manage(Vehicle* papt) 
{ 
} 
 
Staff::~Staff() 
{ 
 	//Destructor  
 	for (int i = 0; i < SIZE; i++) 
 	{ 
 	 	delete vhcl[i]; 
 	} 
} 
 
 
 
 Booking.h 
#include"Payment.h" 
#define SIZE 2 
 
class Booking { private: 
 	char BookID[10];  	char BookDate[20];  	char BookDescription[50];  	double BookPrice;  	int count = 0; 
 
 	Payment* payment[SIZE]; public: 
 	Booking(); 
 	Booking(const char pbookID[], const char pbookDate[],const char pbookDescription[],double pbookPrice,int pay1, int pay2);  	void calculateBookPrice(int id, char pType[], double pAmt); 
 	void displayBookPrice();  	void addBooking(); 
 	~Booking(); 
}; 



 Booking.cpp 
 
#include "Payment.h"
#include "Booking.h" 
#include<cstring> 
Booking::Booking() 
{ 
 	strcpy(BookID, "");  	strcpy(BookDate, "");  	strcpy(BookDescription, ""); 
 	BookPrice = 0; 
} 
 
Booking::Booking(const char pbookID[],const char pbookDate[], const char pbookDescription[], double pbookPrice, int pay1, int pay2) 
{ 
 	strcpy(BookID, pbookID);  	strcpy(BookDate, pbookDate); 
 	strcpy(BookDescription, pbookDescription); 
 	BookPrice = 0;  
} 
 
void Booking::calculateBookPrice(int id, char pType[], double pAmt) 
{ 
 	if (count < SIZE) 
 	{ 
 	 	payment[count] = new Payment(id, pType, pAmt); 
 	 	count++; 
 	} 
} 
void Booking::displayBookPrice() 
{ 
 
} 
void Booking::addBooking() 
{ 
 
} 
Booking::~Booking() 
{ 
 	//Destructor  
 	for (int i = 0; i < SIZE; i++) 
 	{ 
 	 	delete payment[i]; 
 	} 
} 
 

